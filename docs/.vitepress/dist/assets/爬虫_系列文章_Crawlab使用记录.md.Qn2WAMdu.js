import{aw as s,q as a,p as i,aS as n}from"./chunks/framework.C5MdosmZ.js";const g=JSON.parse('{"title":"Crawlab使用记录","description":"","frontmatter":{},"headers":[],"relativePath":"爬虫/系列文章/Crawlab使用记录.md","filePath":"爬虫/系列文章/Crawlab使用记录.md","lastUpdated":null}'),l={name:"爬虫/系列文章/Crawlab使用记录.md"},t=n(`<h1 id="crawlab使用记录" tabindex="-1">Crawlab使用记录 <a class="header-anchor" href="#crawlab使用记录" aria-label="Permalink to &quot;Crawlab使用记录&quot;">​</a></h1><h2 id="官网" tabindex="-1">官网 <a class="header-anchor" href="#官网" aria-label="Permalink to &quot;官网&quot;">​</a></h2><p>官方文档：<a href="https://docs.crawlab.cn/zh/guide/" target="_blank" rel="noreferrer">https://docs.crawlab.cn/zh/guide/</a></p><h2 id="单节点部署" tabindex="-1">单节点部署 <a class="header-anchor" href="#单节点部署" aria-label="Permalink to &quot;单节点部署&quot;">​</a></h2><p>单节点部署: <a href="https://docs.crawlab.cn/zh/guide/installation/docker.html" target="_blank" rel="noreferrer">https://docs.crawlab.cn/zh/guide/installation/docker.html</a></p><h2 id="运行crawlab" tabindex="-1">运行crawlab <a class="header-anchor" href="#运行crawlab" aria-label="Permalink to &quot;运行crawlab&quot;">​</a></h2><h3 id="步骤概览" tabindex="-1">步骤概览 <a class="header-anchor" href="#步骤概览" aria-label="Permalink to &quot;步骤概览&quot;">​</a></h3><ul><li>安装 Docker 和 Docker-Compose</li><li>拉取 Crawlab Docker 镜像（如果没有 MongoDB，也需要拉取）</li><li>创建 docker-compose.yml 并进行配置</li><li>启动 Docker 容器</li></ul><h3 id="安装-docker-和-docker-compose" tabindex="-1">安装 Docker 和 Docker-Compose <a class="header-anchor" href="#安装-docker-和-docker-compose" aria-label="Permalink to &quot;安装 Docker 和 Docker-Compose&quot;">​</a></h3><p>安装docker：<a href="https://www.docker.com/products/docker-desktop/" target="_blank" rel="noreferrer">https://www.docker.com/products/docker-desktop/</a> 查看是否安装成功</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compose </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version</span></span></code></pre></div><p>设置镜像源：<a href="https://yeasy.gitbook.io/docker_practice/install/mirror" target="_blank" rel="noreferrer">https://yeasy.gitbook.io/docker_practice/install/mirror</a></p><h3 id="拉取-crawlab-docker-镜像-如果没有-mongodb-也需要拉取" tabindex="-1">拉取 Crawlab Docker 镜像（如果没有 MongoDB，也需要拉取） <a class="header-anchor" href="#拉取-crawlab-docker-镜像-如果没有-mongodb-也需要拉取" aria-label="Permalink to &quot;拉取 Crawlab Docker 镜像（如果没有 MongoDB，也需要拉取）&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker pull crawlabteam</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">crawlab</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker pull mongo</span></span></code></pre></div><h3 id="创建-docker-compose-yml-并进行配置" tabindex="-1">创建 docker-compose.yml 并进行配置 <a class="header-anchor" href="#创建-docker-compose-yml-并进行配置" aria-label="Permalink to &quot;创建 docker-compose.yml 并进行配置&quot;">​</a></h3><p><code>docker-compose.yml</code></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3.3&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">services:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  master:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    image: crawlabteam</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">crawlab</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    container_name: crawlab_master</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    restart: always</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    environment:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      CRAWLAB_NODE_MASTER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Y&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Y: 主节点</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      CRAWLAB_MONGO_HOST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mongo&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # mongo host address. 在 Docker-Compose 网络中，直接引用 service 名称</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      CRAWLAB_MONGO_PORT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;27017&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # mongo port </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      CRAWLAB_MONGO_DB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;crawlab&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # mongo database </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      CRAWLAB_MONGO_USERNAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;username&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # mongo username</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      CRAWLAB_MONGO_PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;password&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # mongo password </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      CRAWLAB_MONGO_AUTHSOURCE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;admin&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # mongo auth source </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    volumes:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/opt/.crawlab/master:/root/.crawlab&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 持久化 crawlab 元数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/opt/crawlab/master:/data&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 持久化 crawlab 数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/var/crawlab/log:/var/log/crawlab&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 持久化 crawlab 任务日志</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ports:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;8080:8080&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 开放 api 端口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    depends_on:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mongo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mongo:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    image: mongo:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4.2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    restart: always</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    environment:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      MONGO_INITDB_ROOT_USERNAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;username&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # mongo username</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      MONGO_INITDB_ROOT_PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;password&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # mongo password</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    volumes:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/opt/crawlab/mongo/data/db:/data/db&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 持久化 mongo 数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ports:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;27017:27017&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 开放 mongo 端口到宿主机</span></span></code></pre></div><h3 id="启动-docker-容器" tabindex="-1">启动 Docker 容器 <a class="header-anchor" href="#启动-docker-容器" aria-label="Permalink to &quot;启动 Docker 容器&quot;">​</a></h3><p>执行 docker-compose up -d 并在浏览器中导航至 http://&lt;your_ip&gt;:8080，然后开始使用 Crawlab。</p>`,19),e=[t];function h(p,k,r,o,d,c){return i(),a("div",null,e)}const y=s(l,[["render",h]]);export{g as __pageData,y as default};
